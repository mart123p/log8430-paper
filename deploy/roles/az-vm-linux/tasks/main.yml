---
- name: Create vm_create
  set_fact:
    vm_create: []
  
- name: Compute VM name Workers
  set_fact:
    vm_create: "{{ vm_create + [{'name': 'node-worker-' + item,'nic':'nic-worker-' + item, 'size':vm_config['worker']['size']}] }}"
  with_sequence: "start=1 count={{ vm_config['worker']['count'] }}" 

- name: Compute VM name Testers
  set_fact:
    vm_create: "{{ vm_create + [{'name': 'node-test-' + item,'nic':'nic-test-' + item, 'size':vm_config['test']['size']}] }}"
  with_sequence: "start=1 count={{ vm_config['test']['count'] }}"
   
- name: Compute VM name Monitor
  set_fact:
    vm_create: "{{ vm_create + [{'name': 'node-monitor-1','nic':'nic-monitor-1', 'size':vm_config['monitor']['size']}] }}"
  when: vm_config['monitor']['count'] == 1

- name: Compute VM name Master
  set_fact:
    vm_create: "{{ vm_create + [{'name': 'node-master-1','nic':'nic-master-1', 'size':vm_config['master']['size']}] }}"

- name: Create Linux VMs Workers
  azure_rm_virtualmachine:
    resource_group: "{{ resource_group }}"
    name: "{{ item.name }}"
    vm_size: "{{ item.size }}"
    admin_username: "{{ username }}"
    ssh_password_enabled: no
    ssh_public_keys:
      - path: /home/{{ username }}/.ssh/authorized_keys
        key_data: "{{ ssh_key }}"
    network_interfaces: "{{ item.nic }}"
    os_type: Linux
    image:
      offer: 0001-com-ubuntu-server-focal
      publisher: Canonical
      sku: 20_04-lts-gen2
      version: latest
    managed_disk_type: StandardSSD_LRS
  async: 300
  poll: 0
  register: linux_deploy
  loop: "{{ vm_create }}"

# Wait for other long running tasks
- name: Check Linux VM Workers creation status
  async_status:
    jid: "{{ item.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  retries: 300
  delay: 10
  loop: "{{ linux_deploy.results }}"